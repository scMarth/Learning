https://developers.arcgis.com/javascript/latest/sample-code/sandbox/index.html?sample=visualization-vv-rotation

- rainbow island map, creates simplerenderer where each feature will be rendered with the symbol

https://developers.arcgis.com/javascript/latest/api-reference/esri-symbols-PictureMarkerSymbol.html

- featurelayer whose points are styled with a picturmarkersymbol

https://community.esri.com/message/686180-how-to-add-new-graphics-to-an-existing-featurelayer

- adding new graphics to an existing featurelayer

https://developers.arcgis.com/javascript/latest/api-reference/esri-Map.html#basemap

- latest basemaps (Javascript 4.7)

https://developers.arcgis.com/javascript/latest/guide/esri-web-style-symbols/index.html

- contains list of 3d models that can be used with esri 3d maps, see:

   https://developers.arcgis.com/javascript/latest/sample-code/sandbox/index.html?sample=visualization-trees-realistic
   

ArcGIS Javascript 4.11 and applyEdits():

    - Sometime between 4.7, they changed the way you modify features. Now, it seems like you have to use .applyEdits(), documented here:
    https://developers.arcgis.com/javascript/latest/sample-code/editing-applyedits/index.html

    - Back in 4.7, the way you added points to a layer was something like:

      function addPointToLayer(layer, pointX, pointY, address){
         layer.source.add({
            geometry: new Point({
               x: pointX,
               y: pointY
            }),
            attributes: {
               address: address
            }
         });
      }

      where layer is a FeatureLayer, pointX and pointY are floats, and address is a string

    - Using .applyEdits(), the above code should be changed to:

      function addPointToLayer(layer, pointX, pointY, address){
         point = new Point({
            x: pointX,
            y: pointY
         });

         editFeature = new Graphic({
            geometry: point,
            attributes: {
               address: address
            }
         });

         edits = {
            addFeatures: [editFeature]
         };

         layer.applyEdits(edits);
      }