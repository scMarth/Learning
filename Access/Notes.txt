1. Introduction (Programming in Access 2013)


Access is a relational database system with rapid development.

Access is a way of maintaining your data.

Database

    Where does it go? (Oracle, MySQL, MS SQL, Access)

VBA = Visual Basic for Applications
    VBA6 has been discontinued by Microsoft

5. Organizing Our Data (Programming In Access 2013)

Foreign Key - Key from another table
Primary Key - main key for that table

Left off at: 

7. Many To Many Relationships (Programming in Access 2013)

    5-Service Inc.accdb

Composite key:

    Contact_ID
    PhoneNumber_ID

    two ID fields together make a composite key (many to many relationship). It means that the same combination of one field and another field will happen more than once, and can thus be used to uniquely identify a record

Left off at:

12. Filtering Our Data (Programming In Access 2013) https://www.youtube.com/watch?v=FeU_Wsx-v4M&index=12&list=PLYMOUCVo86jEeMMdaaq03jQ_t9nFV737s

13. https://www.youtube.com/watch?v=y2MuAb7pPj0&index=13&list=PLYMOUCVo86jEeMMdaaq03jQ_t9nFV737s

15. https://www.youtube.com/watch?v=bOnFT5hPbX8&index=15&list=PLYMOUCVo86jEeMMdaaq03jQ_t9nFV737s

VBA Modules?


It seems that when you create a form to view records, records are saved whenever you navigate away from that record to another record.

https://stackoverflow.com/questions/2923957/bang-notation-and-dot-notation-in-vba-and-ms-access

"Despite the (formerly) accepted answer to this question, the bang is not in fact a member or collection access operator. It does one simple and specific thing: The bang operator provides late-bound access to the default member of an object, by passing the literal name following the bang operator as a string argument to that default member.

That's it. The object doesn't have to be a collection. It doesn't have to have a method or property called Item. All it needs is a Property Get or Function which can accept a string as the first argument.

For much more detail and proof, see my blog post discussing this

https://bytecomb.com/the-bang-exclamation-operator-in-vba/
"



If the menu for view code disappears:

click home click the pin button at the bottom right corner of the grey menu that shows up

Me.Undo vs Cancel = True

    Me.Undo = reset all changes to a form before the form is updated

    Cancel = True: 





Microsoft Office 365 ProPlus Access
    comes with:
        Access
        Excel
        OneNote
        Outlook
        PowerPoint
        Publisher
        Word
        Skype for Business

When exporting to an ACCDE:

To disable a user from being able to see the code:

    File -> Options -> Current Database:

        Application Options -> Display Form (select which form you want to display when the user opens the ACCDE)

        Navigation -> uncheck Display Navigation Pne

        Ribbon and Toolbar Options ->

            uncheck Allow Full Menus
            uncheck Allow Default Shortcut Menus


Down arrow: (next to arrow left and arrow right in top left)

    More commands -> Current Database -> Ribbon and Toolbar Options

        Check Allow Default Shortcut Menus

Restart Access:

Right click on a tab -> Design View

    on the right sidebar (Property  Sheet): click on "On Load"

        click the triple dots to access the code

        in the sub:

            Private Sub Form_Open()

            ...


            ...

            End Sub

            add this line in the sub:

            ' Hide the top Ribbon menu
            DoCmd.ShowToolbar "Ribbon", acToolbarNo

Restart access:

you don't see the ribbon menu anymore



Application Options
    Display Form: frmProjectTracking

Navigation
    uncheck Display Navigation Pane

Ribbon and Toolbar Options
    uncheck Allow Full Menus
    check Allow Default Shortcut Menus

If a user really wanted to / knew how to, he could still enable code / navigation and potentially delete the database.


Seems like it's impossible to access design view from an ACCDE



Steps to completely locking an accde:

Open the ACCDB:

Top Left Arrow down -> more commands -> current database

    Navigation
        uncheck Display Navigation Pane

    Ribbon and Toolbar Options
        uncheck Allow Full Menus
        uncheck Allow Default Shortcut Menus

    Application Options
        Display Form -> select the desired default form
        Use Access Special Keys uncheck (disables F11 hotkey)

Right click tab -> design view -> select the default form that you set earlier:

    click 3 dots for onload (events tab) -> code builder

    add these lines in the form_open sub

            ' Hide the top Ribbon menu
            DoCmd.ShowToolbar "Ribbon", acToolbarNo

File -> Save As

Make ACCDE

(continue on to Disable the AllowBypassKey Property (Creating a LOCKED ACCDE file))

If you don't disable F11:

    THEY COULD STILL hit F11 to show the navigation pane
        in an accde:
            if they hit F11 then try to create a new record by manually typing it in in a table, they CAN

            but they cannot DELETE records (can't right click)

        in an accdb:
            same thing as above


        when new records are entered in manually, some checks are not performed. if a field has a dropdown in a form, for example, you can actually just type literally anything you want.

        on the other hand, some checks do seem to be performed: for example, in int fields, it only allows int values

        date fields are also enforced

        dropdowns can COMPLETELY be circumvented, though, same thing with phone numbers

        even records that have been locked can be modified from the table.......


bypass key: hold shift then double click ACCDB

shift + enter also works

you MUST keep holding the shift key until it fully loads

from there, even if you locked the accdb / accde, you can still undo the locks, re-enable the menus, etc.

When you use the bypass key:

    in an accde: you can't access the design view / code, but you can still access the tables with delete privaleges

    in an accdb: you can access the design view / code AND the tables



Disable the AllowBypassKey Property (Creating a LOCKED ACCDE file)

***BACKUP YOUR WORK IN ANOTHER DIRECTORY***

If your project is locked, open it in bypass mode by holding Shift then opening the accdb file.

Create -> Module

Paste the following code:

Function ap_DisableShift()
'This function disable the shift at startup. This action causes
'the Autoexec macro and Startup properties to always be executed.

On Error GoTo errDisableShift

Dim db As DAO.Database
Dim prop as DAO.Property
Const conPropNotFound = 3270

Set db = CurrentDb()

'This next line disables the shift key on startup.
db.Properties("AllowByPassKey") = False

'The function is successful.
Exit Function

errDisableShift:
'The first part of this error routine creates the "AllowByPassKey
'property if it does not exist.
If Err = conPropNotFound Then
Set prop = db.CreateProperty("AllowByPassKey", _
dbBoolean, False)
db.Properties.Append prop
Resume Next
Else
MsgBox "Function 'ap_DisableShift' did not complete successfully."
Exit Function
End If

End Function

Function ap_EnableShift()
'This function enables the SHIFT key at startup. This action causes
'the Autoexec macro and the Startup properties to be bypassed
'if the user holds down the SHIFT key when the user opens the database.

On Error GoTo errEnableShift

Dim db as DAO.Database
Dim prop as DAO.Property
Const conPropNotFound = 3270

Set db = CurrentDb()

'This next line of code disables the SHIFT key on startup.
db.Properties("AllowByPassKey") = True

'function successful
Exit Function

errEnableShift:
'The first part of this error routine creates the "AllowByPassKey
'property if it does not exist.
If Err = conPropNotFound Then
Set prop = db.CreateProperty("AllowByPassKey", _
dbBoolean, True)
db.Properties.Append prop
Resume Next
Else
MsgBox "Function 'ap_DisableShift' did not complete successfully."
Exit Function
End If

End Function

Ctrl + S -> Save as "DisableShiftKey" or probably anything you want...

In the Visual Basic editor, click Immediate Window on the View menu.

If you want to disable the SHIFT key, type ap_DisableShift in the Immediate window, and then press ENTER. If you want to enable the shift key, type ap_EnableShift in the Immediate window, and then press ENTER.

DO NOT EXIT THE FILE YET! You still need to make the ACCDE

File -> Save As -> Make ACCDE

Re-enabling menus and panes (you must have at the very least the .accdb that can be Bypassed with the Shift Key!!)

To view code, hold the 'shift' key and then open the unlocked .accdb. Keep holding the shift key until you see the tables on the left pane.
To re-enable the ribbon toolbar:
    - Right click a form -> Design View
    - In the right pane 'Property Sheet': Click the cell next to 'On Load' in the 'Event' tab.
    - Comment or remove the line 'DoCmd.ShowToolbar "Ribbon", acToolbarNo'
From there you can save then close and re-open the .accdb and then re-enable menus and navigation panes through the UI.

The tables and code should be inaccessible from the locked .accde file regardless of whether or not you're holding the 'shift' key.

________________________________________________________________________

If we keep the ribbon menu, it allows people to re-enable everything.

However, if we hide the ribbon menu, it also disables the undo and redo buttons at the top.

It seems like there is a pre-canned undo button but not a redo button, so if we want them both,
it looks like we have to keep the ribbon menu.

You can't use the hotkey either. Ctrl + Z works (undo) but Ctrl + Y doesn't do anything.

The only way to redo is to use the redo button on the ribbon it seems.

Property Sheet not visible:

    - Press CTRL G to get an immediate window
    - Enter this: 'CommandBars("Property Sheet").Enabled = True' and hit Enter (drop the single quote)



DoCmd.RunCommand acCmdRedo
    - doesn't do the same thing as the redo button in the ribbon menu


Private Sub btnUndo_Click()
    If Me.Dirty Then
        DoCmd.RunCommand acCmdUndo
    End If
End Sub

    - DOES undo typing,
    - but does not enable the redo button in the ribbon bar...



If you bind a button to the macro "Redo" and save and re-open the form (just in case), it will still error out when you try to redo some typing.
The "Redo" macro definitely isn't the same redo as the one in the ribbon menu.


________________________________________________________________________

Difference between concatenation techniques: & and +

This code:

    strFullName = FirstName & " " & MiddleInitial & " " & LastName

has a small problem. People with no middle name (Null in the table) will have two spaces between their first and last names... like:

Tom  Smith

If you use pluses:

    strFullName = FirstName + " " + MiddleInitial + " " + LastName

then If any of the variables FirstName, MiddleInitial, or LastName is null, then the whole concatenation is null.

So in the above example, you can do:

    strFullName = FirstName & " " & (MiddleInitial + " ") & LastName

which will tack on an extra space only if the MiddleInitial is not null

________________________________________________________________________

It seems that when you change the background color of text boxes to a darker color, the blinking cursor stays black, so it's almost un-noticeable because of the very low contrast.

There doesn't seem to be a property to control the blinking cursor's color in the text box's Property Sheet either..

You can pick your own images for buttons, and have a caption for buttons.

Background image - Design view -> in 'Property Sheet', select 'Form' -> Picture
    Alternatively: Format -> Background Image

Can't set transparency/opacity of images so it looks like you would have to modify the actual image with some image manipulation program.

Changing border radius - select -> Format tab -> Change Shape

________________________________________________________________________

Save as CSV

Click on a Table to select it.

External Data -> Text File -> Browse File name -> pick a location and save as type .csv (You must type in the .csv file extension manually) -> OK -> Next -> check Include Field Names on First Row -> Next -> Finish

________________________________________________________________________

Making a read-only table:

Create Tab in top menu -> Form Design
Add a Subform / Subreport
Use existing Tables and Queries -> Next
...
(self explanatory)
...
Click the form (or select form in the property sheet dropdown) -> Under 'Format' tab in the Property Sheet -> Default View to 'Dataset'
Select the Subform/Subreport (you should see 'Selection type: Subform/Subreport' in Property Sheet)... (click right below the form tab)
Set Horizontal Anchor to 'both'
Set Vertical Anchor to 'both'

right-click subform -> design view -> click on text box -> 'data' tab in property sheet ->
    enabled = yes ; locked = yes : when you click on the cell, blinking cursor shows up, doesn't seem like you can edit the field though, this is the only option where 
    enabled = yes ; locked = no : (same)
    enabled = no ; locked = yes : can't click the cell, can't focus on  the cell
    enabled = no ; locked = no : can't click on the cell, can't focus, cell is greyed out..

    enabled = yes
        - allows you to click on that cell and that entire record gets highlighted
        - You can also navigate to them using the arrow keys.
        - if you type in the filter box, enabled cells will be searchable. If no text boxes are enabled, then you can't search for anything using filters
    enabled = no
        - if you click on that cell, it won't focus on that cell / highlight the record
        - You can not navigate to them using arrow keys.
    locked = yes
        - can't click on cell to focus on cell / record
    locked = no
        - can't click on cell to focus on cell / record

    for a read only dataset, use enabled = yes, locked = yes

In design view, in property sheet dropdown, select the form -> data tab
    allow additions - no
    allow deletions - no
    allow edits - no

Right-click form tab -> Save the form