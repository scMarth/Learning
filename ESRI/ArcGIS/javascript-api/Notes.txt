Notes on FeatureLayer applyEdits usage:
   - https://community.esri.com/t5/arcgis-api-for-javascript-questions/featurelayer-applyedits-not-adding-features-to/td-p/176026
   - https://developers.arcgis.com/javascript/3/jsapi/featurelayer-amd.html#applyedits


https://developers.arcgis.com/javascript/latest/sample-code/sandbox/index.html?sample=visualization-vv-rotation

- rainbow island map, creates simplerenderer where each feature will be rendered with the symbol

https://developers.arcgis.com/javascript/latest/api-reference/esri-symbols-PictureMarkerSymbol.html

- featurelayer whose points are styled with a picturmarkersymbol

https://community.esri.com/message/686180-how-to-add-new-graphics-to-an-existing-featurelayer

- adding new graphics to an existing featurelayer

https://developers.arcgis.com/javascript/latest/api-reference/esri-Map.html#basemap

- latest basemaps (Javascript 4.7)

https://developers.arcgis.com/javascript/latest/guide/esri-web-style-symbols/index.html

- contains list of 3d models that can be used with esri 3d maps, see:

   https://developers.arcgis.com/javascript/latest/sample-code/sandbox/index.html?sample=visualization-trees-realistic
   

ArcGIS Javascript 4.11 and applyEdits():

    - Sometime between 4.7, they changed the way you modify features. Now, it seems like you have to use .applyEdits(), documented here:
    https://developers.arcgis.com/javascript/latest/sample-code/editing-applyedits/index.html

    - Back in 4.7, the way you added points to a layer was something like:

      function addPointToLayer(layer, pointX, pointY, address){
         layer.source.add({
            geometry: new Point({
               x: pointX,
               y: pointY
            }),
            attributes: {
               address: address
            }
         });
      }

      where layer is a FeatureLayer, pointX and pointY are floats, and address is a string

    - Using .applyEdits(), the above code should be changed to:

      function addPointToLayer(layer, pointX, pointY, address){
         point = new Point({
            x: pointX,
            y: pointY
         });

         editFeature = new Graphic({
            geometry: point,
            attributes: {
               address: address
            }
         });

         edits = {
            addFeatures: [editFeature]
         };

         layer.applyEdits(edits);
      }


Useful links on dealing with nested promises and queries:
  http://raykendo.com/arcgis-jsapi-hack-get-around-1000-limit-on-arcgis-server/
  https://stackoverflow.com/questions/30853265/dynamic-chaining-in-javascript-promises

One problem with using JS to modify / edit features on a feature or map service is that you run into the problem of authentication. In other words, how would you allow changes to be made on a service if the user doesn't have permissions, unless you make it publicly editable, which introduces security risks?

https://developers.arcgis.com/javascript/latest/sample-code/identity-oauth-basic/index.html
  
  Looks like you can set up a login user interface, but you have to have the app registered, and you have to get an appid?

https://doc.arcgis.com/en/maps-for-microstrategy/install-and-configure/generate-an-application-id.htm

  Directions on how to register an application, but you need a web url.

  Type: Application doesn't require web url.

  AppID is under
    Settings > Application > App Registration > Registered Info

The OAuth example doesn't seem to work when you host the html page on your own server..