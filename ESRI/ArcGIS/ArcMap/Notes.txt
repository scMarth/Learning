If you are publishing a service and want to set a default variable for one of the attributes in one of the layers, open the .mxd that you use to publish the MapServer:

    start editing > in the create features pane, right-click a layer > properties > this will access the templates for that layer

    you may have to edit that layer's symbology


If you have two separate files that both have the same layer with same source and you want to copy one color scheme / symbology for that layer from one file to another, you can right click the layer in the file you want to copy > Save As Layer File... > save file > then in the other file right click the same layer > Symbology tab > import from layer file

If you get an error when trying to publish services:
    Error executing tool. PublishServiceDefinition Job ID: [HASH CODE] : ERROR 001369: Failed to create the service. Failed to execute (Publish Service Definition).

    It may be due to low memory on the ArcGIS Server (maybe too many instances of services)

See the coordinates of a polygon:
    select polygon > edit vertices > sketch properties

If you are publishing a geoprocessing service and ArcMap asks to copy over a .mxd file, and you get errors:
    - try remaking the .mxd 
    - try restarting ArcGIS Servers in the cluster

Note: If you right-click on a newly created feature class and go to:
    Manage > Enable Archiving

    and then:

    Manage > Enable SQL Access (to create FC_NAME_EVW)

    and run into access issues when trying to enable SQL access, then the user in the sde connection login needs more credentials:

        example:

        schema_name

        - schema_name login mapped to schema_name as default schema
        - grant schema_name the following privileges
            - database > Security > users > right-click user > properties > under "membership" check:
                db_writer, db_reader, db_owner
        
        - run the following commands as a DB admin:
            GRANT SELECT, INSERT, UPDATE, DELETE TO schema_name;
            GRANT CREATE TABLE TO schema_name;
            GRANT CREATE PROCEDURE TO schema_name;
            GRANT CREATE VIEW TO schema_name;


If you can't rename or delete a .sde connection, try launching ArcMap as administrator.


In order to create a field, you must be using a feature class from a .sde connection where the user-name in the connection properties matches the domain owner.



If you are using the requests module to make ArcGIS REST API calls and have errors with generateToken:
    'NoneType' object has no attribute 'utf_8_decode'

    You may want to try restarting ArcMap


Recovering deleted feature class records from archived versions:
    https://gis.stackexchange.com/questions/278050/retrieving-deleted-records-from-feature-dataset-in-enterprise-geodatabase

        If versioning solution is not an option, perhaps you have archiving turned on for the datasets in question. If so, it is as simple as connecting to the database using a historic version time prior to when the bad edits were made. Then you can select those features, export them, connect back to the live dataset, and append in those features. More on Archiving http://desktop.arcgis.com/en/arcmap/latest/manage-data/geodatabases/geodatabase-archiving.htm

    https://desktop.arcgis.com/en/arcmap/latest/manage-data/geodatabases/working-with-historical-versions.htm

        - drag the feature class (with archiving enabled) into the table of contents in ArcMap
        - right-click the SDE connection from within the table of contents > change version > historical tab > specific date and time (put in the desired time to go back to) > OK
        - select the features you want
        - right-click the feature class from within the table of contents > data > export data > export the select features (e.g. to a file geodatabase)

    https://gis.stackexchange.com/questions/78654/copy-single-feature-into-another-feature-class

        Have you tried simply copying and pasting features?

        You can do this by adding both shapefiles to the map TOC, then choose "Editing-> Start Editing", and choose the DESTINATION shapefile workspace to edit.

        Next, choose the "Edit Tool" (small arrowhead by the Editor dropdown), select the SOURCE feature to copy, right-click and choose "Copy".

        Right-click and choose "Paste". This will usually bring up a dialog that asks you to "Choose a layer to create feature(s) in". Choose your DESTINATION layer from the Target dropdown box and press "OK".

        Finally, choose "Editor-> Stop Editing" and save your edits.
    
    Once the feature record has been restored, you have to re-connect it to features by editing globalid / parentid of related records.

Insufficient Permissions when trying to delete locks on feature classes:
    - this can be caused by that feature class being used in a service. To fix, stop the service first.

Exporting / Importing feature classes:
    export:
        right-click > export > to geodatabase (single) > navigate to desired location and click new file geodatabase button > select filegeodatabase > enter table / feature name and export
    import:
        right-click SDE connection > feature class (single) or table (single)

Adding / Removing / Changing fields:
    - open the attribute table in ArcMap after dragging it into the project
    - stop any services that use that table or feature class
    - remove the fields you want to change (you may want to save the settings first)
    - add the field by clicking the drop-down in the upper-left corner of the attribute table in ArcMap
    - restart the services that use the table or feature class
    - services that use that attribute in a view may need to be republished

    - if views that are derived from that service don't update in ArcMap, then you may want to try restarting ArcMap


Updating views:
    - if you change a view definition and the data type is not updating, try removing the field and then adding it back in

Note on coded domains:
    - if you are refreshing a feature class from a different source / machine, then often coded domains and subtypes have to be set again

Updating coded domains:
    - right click the SDE connection
    - update the domains in Domain tab, you may have to type in a field (make a manual change) if you are just copying and pasting, otherwise if you just copy and paste, the Apply button will be greyed out.

Setting a coded domain to a feature class field:
    - stop ArcGIS server so that the locks from services clear up
    - right click the feature class under the SDE connection in ArcMap
    - click refresh
    - right click feature class > properties > subtypes
    - you should now be able to select the dropdown for the fields

Delete Domain:
    - Right pane > Search tab > search for "domain" > Delete Domain (Data Management) (Tool)

Coded Domains:
    https://www.youtube.com/watch?v=fWW1CnKQCXc

    Right-click feature > propertie > fields
    Right-click feature > propertie > subtypes > domains...


    Accessing via ArcPy:
        https://desktop.arcgis.com/en/arcmap/10.3/analyze/arcpy-data-access/listdomains.htm

Making a line tangent to the edge of a polygon (line is longer than the edge)

    Editor > Options > Versioning > Uncheck 'Edit a version of the database with the ability to undo and redo'

    Editor > Start Editing > Select the polyline layer under 'Create Features' pane > Select 'line' under Construction Tools pane

    Make a point on the edge of the polygon, make another point on the edge of the polygon (forming a line)

    Right-click the line > Parallel > make a point outside the polygon

    Do the same as above for the other side

    Right-click the innter vertices and delete them (tip of mouse cursor needs to be exactly on the vertex or the menu won't show up when you right-click)

    Right-click > Finish sketch

https://desktop.arcgis.com/en/arcmap/10.3/analyze/arcpy-data-access/updatecursor-class.htm
    Opening simultaneous insert or update operations on the same workspace using different cursors requires the start of an edit session.

    To start / stop editing sessions in arcpy, use:
        https://desktop.arcgis.com/en/arcmap/10.3/analyze/arcpy-data-access/editor.htm



Creating shapefiles with ArcCatalog:
    Navigate to the desired location

    Right-click > New > Shapefile...

    Adding fields:
        Right-click Shapefile > Properties > Fields



ArcMap create point from x,y coordinates:
    https://desktop.arcgis.com/en/arcmap/10.3/manage-data/creating-new-features/creating-a-point-at-an-exact-x-y-location.htm

    Start an editing session in a point feature class
    Click Point tool under "Construction Tools" > Right-click the map > Absolute X, Y







Feature service requires a registered database
    https://enterprise.arcgis.com/en/server/latest/manage-data/windows/registering-your-data-with-arcgis-server-using-arcgis-for-desktop.htm

    In Catalog pane, under "GIS Servers", right-click on your server and choose "Server Properties"











Publish ArcPy geoprocessing tool as service:
    run the script (double-click it its toolbox) > in the results window, right-click the result > share as...

To select multiple layers with the mouse, you can use the Select Features mode then hold shift as you box-click the features that you want to select.

To color polygons by value:

    Right-click layer in Table of Contents > Symbology tab > Quantities > Value (select the field you want to use) > right-click in color table > reverse sorting

Export layer data (feature class) as shapefile:
    right click > Data > Export Data... > (remember to save as shapefile in the dropdown before you save)

Share a layer as a service:
    Add desired layer to map > File > Share as > Service > 

Start / stop a service:
    https://enterprise.arcgis.com/en/server/latest/publish-services/windows/starting-and-stopping-services.htm

        In the Catalog tree, expand the GIS Servers node.

        Double-click Add ArcGIS Server and click Administer GIS server to establish an administrative connection to the server. If you have this connection set up, you can skip this step. For instructions on how to connect, see Connect to ArcGIS Server from ArcGIS Desktop.

        Within your connection to ArcGIS Server, right-click your service to reveal a menu for starting and stopping the service. Alternatively, you can display the ArcGIS Server Tools toolbar that contains these same operations.

    e.g. click to expand agsadmin on domain (admin) > navigate to service > right-click > stop

Project to different coordinate system:
    In right pane, at the bottom, click 'search' tab > Search 'Project' > Project (Data Management) (Tool) >

    102644  (2228)


Troubleshooting:

    If you can't delete a .gdbtable inside a file geodatabase e.g. :
    
        PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: '//vgisdata/gis data/GIS_Projects/Qscend/request_data/\\QScendRequestData.gdb\\a00000009.gdbtable'

    This might be because the ArcGIS REST Service is using that file in the geodatabase. You have to stop the service. See above for stopping the service.

https://enterprise.arcgis.com/en/server/latest/administer/windows/configure-service-instance-settings.htm

    If you set maximum number of instances per machine under 'pooling' for a service to 2, it seems like 2 processes can access the service at a given time.

Editing:
    https://www.youtube.com/watch?v=EBVW4LNPWXQ

Printing from scripts:
    http://obidangis.blogspot.com/2013/06/how-to-print-messages-regardless-of.html

    This thread  allows you to print a message from a standalone script or from run within ArcMap/ArcToolbox.  It simply collects the appends information to a list and either "print" ' s or uses the arcpy.AddMessage method.  Simple and can be called from any Python program.  Requires a list of messages

    Useage

    '''
    -------------------------------------------------------------------------------
    Name:        printMessages.py
    Purpose:     to collect messages and print them
    Author:      Dan Patterson
    Created:     11/06/2013
    Copyright:   (c) Dan Patterson 2013
    Licence:     absolutely none
    -------------------------------------------------------------------------------
    '''
    def printMessages(messages):
      '''provide a list of messages to this method'''
      for i in messages:
        print i
        #arcpy.AddMessage(i)  #uncomment if using arcpy
    if __name__ == '__main__':
      #import arcpy  #uncomment if using arcpy
      messages=[]
      messages.append("Hello World")
      messages.append("Hello Again")
      printMessages(messages)

